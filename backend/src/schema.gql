# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Photo {
  id: Int!
  createdAt: Date!
  updatedAt: Date!
  name: String!
  url: String!
}

"""Date custom scalar type"""
scalar Date

type Room {
  id: Int!
  createdAt: Date!
  updatedAt: Date!
  name: String!
  description: String!
  author: User
  usersNumber: Int!
  photo: Photo
}

type Message {
  id: Int!
  createdAt: Date!
  updatedAt: Date!
  author: User!
  room: Room!
  body: String!
}

type Notification {
  id: Int!
  createdAt: Date!
  updatedAt: Date!
  user: User!
  triggeredBy: User!
  url: String!
  objectId: Int!
  parentId: Int!
  objectType: ObjectTypeEnum!
  readed: Boolean!
}

enum ObjectTypeEnum {
  REPLY
  COMMENT
}

type User {
  id: Int!
  createdAt: Date!
  updatedAt: Date!
  displayName: String!
  email: String!
  verified: Boolean!
  photo: Photo
  messagesNumber: Int!
  createdRooms: [Room!]
  entriesNumber: Int!
  isAdmin: Boolean!
  isModerator: Boolean!
  isBanned: Boolean!
  showNotifications: Boolean!
  showAvatars: Boolean!
  showColorNames: Boolean!
  color: String!
  joinedRooms: [Room!]!
  ignore: [User!]!
  notifications: [Notification!]!
  points: Int!
  commentsNumber: Int!
}

type Link {
  id: Int!
  createdAt: Date!
  updatedAt: Date!
  url: String!
  publisher: String!
  author: String
  title: String
  description: String
  photo: String
}

type Entry {
  id: Int!
  createdAt: Date!
  updatedAt: Date!
  url: String
  slug: String!
  title: String!
  publisher: String
  description: String
  body: String
  author: User
  room: Room!
  photo: Photo
  type: EntryType!
  comments: Comment!
  commentsNumber: Int
  voteScore: Int
  userVote: VoteValueEnum
  deleted: Boolean!
}

enum EntryType {
  LINK
  ARTICLE
  IMAGE
  VIDEO
}

enum VoteValueEnum {
  UP
  DOWN
  NONE
}

type Comment {
  id: Int!
  createdAt: Date!
  updatedAt: Date!
  author: User!
  entry: Entry!
  body: String
  parentId: Int
  voteScore: Int
  userVote: VoteValueEnum
  deleted: Boolean!
}

type Emoji {
  id: Int!
  createdAt: Date!
  updatedAt: Date!
  name: String!
  file: String!
  roomId: Int
}

type OnlineUser {
  userId: Int!
  roomId: Int!
  name: String!
  photo: Photo
  isAdmin: Boolean!
  isModerator: Boolean!
  isBanned: Boolean!
  color: String!
}

type VoteResult {
  userValue: Int!
  voteScore: Int!
}

type Query {
  me: User!
  user(id: Int!): User!
  userEntries(userId: Int!, offsetId: Int!): [Entry!]!
  userComments(userId: Int!, offsetId: Int!): [Comment!]!
  userMessages(userId: Int!, offsetId: Int!): [Message!]!
  onlineUsers(roomId: Int!): [OnlineUser!]!
  room(name: String!): Room!
  newRooms: [Room!]!
  searchRooms(name: String!): [Room!]!
  popularRooms(limit: Int!): [Room!]!
  initialMessages(roomId: Int!): [Message!]!
  entry(entryId: Int!): Entry!
  entries(queryData: QueryEntriesInput!): [Entry!]!
  checkLinkExsits(linkId: Int!, roomId: Int!): [Entry!]!
  metadata(url: String!): Link!
  comments(entryId: Int!): [Comment!]!
  comment(commentId: Int!): Comment!
  newNotificationsNumber: Int!
  notifications(offsetId: Int!): [Notification!]!
  globalEmojis: [Emoji!]!
}

input QueryEntriesInput {
  roomName: String!
  limit: Int!
  offset: Int!
  sort: EntrySort!
}

enum EntrySort {
  NEW
  HOT
  BEST
}

type Mutation {
  createNewUser(newUserData: NewUserData!): Boolean!
  verifyUserEmail(token: String!): Boolean!
  createResetPasswordToken(email: String!): Boolean!
  resetUserPassword(resetPasswordData: ResetPasswordData!): Boolean!
  loginUserWithFacebook(access_token: String!): Boolean!
  loginUserWithGoogle(access_token: String!): Boolean!
  loginUserWithEmail(email: String!, password: String!): Boolean!
  logout: Boolean!
  changeUserDisplayName(name: String!): User!
  ignoreUser(id: Int!): Boolean!
  removeIgnoreUser(id: Int!): Boolean!
  changeUserColor(color: String!): User!
  updateUserSettings(newSettingsData: NewSettingsData!): User!
  banUser(id: Int!): Boolean!
  deleteUserContent(id: Int!): Boolean!
  createRoom(newRoomData: NewRoomInput!): Room!
  joinRoom(id: Int!): Boolean!
  leaveRoom(id: Int!): Boolean!
  createMessage(newMessageData: NewMessageInput!): Message!
  deleteMessage(id: Int!): Boolean!
  createLink(newLinkData: NewLinkData!): Entry!
  createArticle(photo: Upload, newArticleData: NewArticleData!): Entry!
  deleteEntry(id: Int!): Boolean!
  uploadRoomPhoto(attachment: Upload!, roomId: Int!): Photo!
  uploadUserPhoto(attachment: Upload!): Photo!
  deletePhoto(photoId: Int!): Boolean!
  vote(value: VoteValueEnum!, entryId: Int!): VoteResult!
  voteComment(value: VoteValueEnum!, commentId: Int!): VoteResult!
  createComment(commentData: NewCommentData!): Comment!
  deleteComment(commentId: Int!): Boolean!
  readAllNotification: Boolean!
  readNotification(id: Int!): Notification!
  blacklistPublisher(entryId: Int!): Boolean!
  blacklistPublisherAndRemoveEntires(entryId: Int!): Boolean!
  createEmoji(newEmojiData: NewEmojiData!): Boolean!
}

input NewUserData {
  email: String!
  name: String!
  password: String!
  passwordConfirmation: String!
}

input ResetPasswordData {
  token: String!
  password: String!
  passwordConfirmation: String!
}

input NewSettingsData {
  showNotifications: Boolean
  showAvatars: Boolean
  showColorNames: Boolean
}

input NewRoomInput {
  name: String!
  description: String!
}

input NewMessageInput {
  roomId: Int!
  body: String!
}

input NewLinkData {
  title: String!
  description: String!
  linkId: Int!
  roomId: Int!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input NewArticleData {
  title: String!
  description: String!
  body: String!
  roomId: Int!
}

input NewCommentData {
  body: String!
  entryId: Int!
  parentId: Int
}

input NewEmojiData {
  name: String!
  url: String!
  roomId: Int
}

type Subscription {
  messageAdded(roomId: Int!): Message!
  messageDeleted(roomId: Int!): Message!
  notification: Notification!
}
